'use strict';function generateCheckboxHTML(a,b){var c="";for(const d in a)c+=`<div class="d-flex mt-10p">
            <div class="ltr:me-3 rtl:ms-3">
                <input type="hidden" name="${d}" value="0">
                <div class="switch switch-bg d-inline m-r-10">
                    <input type="checkbox" name="${d}" class="checkActivity" id="${d}" value="1" ${a[d].default_value?"checked":""} ${a[d].is_disabled?"disabled":""}>
                    <label for="${d}" class="cr"></label>
                </div>
            </div>
            <div class="mt-2">
                <span>${a[d].title}</span>
            </div>
        </div>`;$(`#${b}`).html(c)}function generateLocationHTML(a,b){if(!a)return void $(`#${b}`).html("");let c="<div class=\"mt-30p b-bottom-ddd pb-2\">";for(const e in c+=`<label for="">${jsLang("Location")}</label>`,c+="</div>",c+="<div id=\"custom_field_location\">",a){const b=a[e];if(b.values&&0<b.values.length){c+="<div class=\"form-group row\">",c+=`<label for="${e}" class="col-sm-12 control-label require">${b.title}</label>`,c+="<div class=\"col-sm-12\">",c+=`<select class="form-control select2-custom inputFieldDesign" name="${e}" id="${e}">`;for(const a of b.values){var d=a.charAt(0).toUpperCase()+a.slice(1).replaceAll("_"," ");c+=`<option value="${a}">${d}</option>`}c+="</select>",c+="</div>",c+="</div>"}}c+="</div>",$(`#${b}`).html(c),$(".select2-custom").select2()}function hideRulesField(){var a=$("#rules").closest(".form-group"),b=$("#field_to").val();a.toggleClass("d-none","products"===b||"orders"===b)}$("#field_to").on("change",function(){var a=belongsTo[$(this).val()].visibility,b=belongsTo[$(this).val()].options,c=belongsTo[$(this).val()].location;generateCheckboxHTML(a,"custom_field_visibility"),generateCheckboxHTML(b,"custom_field_options"),generateLocationHTML(c,"custom_field_location"),hideRulesField()}),$("#type").on("change",function(){const a=$(this).val(),b=inputTypes[a],c=b.need_option?`
        <div class="form-group row mb-10">
            <label for="name" class="control-label require ltr:ps-3 rtl:pe-3">
                ${jsLang("Options")}
            </label>
            <div class="col-sm-12">
                <textarea class="form-control" name="options" id="options">${fieldOptions}</textarea>
                <small class="${b.option_note?"":"d-none"} form-text text-muted">${b.option_note}</small>
            </div>
        </div>`:"",d=b["default"],e=`
        <div class="form-group row mb-10 ${d["class"]}">
            <label for="default_value" class="control-label ltr:ps-3 rtl:pe-3">${jsLang("Default Value")}
            </label>
            <div class="col-sm-12">
                <${d.tag} type="${d.type}" value="${defaultValue}" class="form-control form-width ${"input"==d.tag?"inputFieldDesign":""} " id="default_value" name="default_value" >${"textarea"==d.tag?defaultValue:""}</${d.tag}>
                <small class="form-text text-muted">${jsLang("Predefined value assumed if no other value is provided.")}</small>
            </div>
        </div>`;$("#custom_field_option").html(c),$("#custom_field_default_value").html(e)}),$(".custom-field-datepicker").each(function(){$(this).daterangepicker(dateSingleConfig(""==$(this).val()?"2000-01-01":$(this).val()))}),$(function(){$(".select2-custom").select2(),hideRulesField(),$(".accessibility-parent .checkbox:nth-child(2)").on("change",function(){const a=$(this),b=a.closest(".accessibility-parent").find(".checkbox:nth-child(1) input:nth-child(2)"),c=a.closest(".accessibility-parent").find(".checkbox:nth-child(1) label");a.find("input:nth-child(2)").is(":checked")?(b.prop({checked:!0,disabled:!0}),c.removeClass("opacity-100").addClass("opacity-50")):(b.prop("disabled",!1),c.removeClass("opacity-50").addClass("opacity-100"))}),0==$(".show-custom-fields-main-section").find("input, textarea, select").length&&$(".show-custom-fields-main-section").remove()});
